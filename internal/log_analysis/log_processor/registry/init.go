// Code generated by registry/generate_init.go; DO NOT EDIT
package registry

/**
 * Panther is a Cloud-Native SIEM for the Modern Security Team.
 * Copyright (C) 2020 Panther Labs Inc
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

import (
	"github.com/panther-labs/panther/internal/log_analysis/log_processor/logtypes"
	// Packages that export log types
	apachelogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/apachelogs"
	awslogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/awslogs"
	boxlogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/boxlogs"
	cloudflarelogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/cloudflarelogs"
	crowdstrikelogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/crowdstrikelogs"
	duologs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/duologs"
	fastlylogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/fastlylogs"
	fluentdsyslogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/fluentdsyslogs"
	gcplogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/gcplogs"
	gitlablogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/gitlablogs"
	gravitationallogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/gravitationallogs"
	gsuitelogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/gsuitelogs"
	juniperlogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/juniperlogs"
	laceworklogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/laceworklogs"
	nginxlogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/nginxlogs"
	oktalogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/oktalogs"
	oneloginlogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/oneloginlogs"
	osquerylogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/osquerylogs"
	osseclogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/osseclogs"
	slacklogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/slacklogs"
	sophoslogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/sophoslogs"
	suricatalogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/suricatalogs"
	sysloglogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/sysloglogs"
	umbrellalogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/umbrellalogs"
	zeeklogs "github.com/panther-labs/panther/internal/log_analysis/log_processor/parsers/zeeklogs"
)

func init() {
	// Initialize the registered log types group
	nativeLogTypes = logtypes.MustMerge("registered",

		apachelogs.LogTypes(),

		awslogs.LogTypes(),

		boxlogs.LogTypes(),

		cloudflarelogs.LogTypes(),

		crowdstrikelogs.LogTypes(),

		duologs.LogTypes(),

		fastlylogs.LogTypes(),

		fluentdsyslogs.LogTypes(),

		gcplogs.LogTypes(),

		gitlablogs.LogTypes(),

		gravitationallogs.LogTypes(),

		gsuitelogs.LogTypes(),

		juniperlogs.LogTypes(),

		laceworklogs.LogTypes(),

		nginxlogs.LogTypes(),

		oktalogs.LogTypes(),

		oneloginlogs.LogTypes(),

		osquerylogs.LogTypes(),

		osseclogs.LogTypes(),

		slacklogs.LogTypes(),

		sophoslogs.LogTypes(),

		suricatalogs.LogTypes(),

		sysloglogs.LogTypes(),

		umbrellalogs.LogTypes(),

		zeeklogs.LogTypes(),
	)
}
